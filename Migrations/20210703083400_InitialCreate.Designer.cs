// <auto-generated />
using System;
using ChicksApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChicksAppNew.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210703083400_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChicksApp.Domain.GeneralStock", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CurrentFoodQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentWoodDustQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalCurrentChicksNum")
                        .HasColumnType("int");

                    b.Property<int>("TotalDeadChicksNum")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalFoodQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalInitialChicksNum")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalWoodDustQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("GeneralStocks");
                });

            modelBuilder.Entity("ChicksApp.Domain.StockInsertionOperation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedChicksNum")
                        .HasColumnType("int");

                    b.Property<decimal>("AddedFoodQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AddedWoodDustQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("StockInsertionOperations");
                });

            modelBuilder.Entity("ChicksApp.Domain.Ward", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("ChicksApp.Domain.WardInsertionOperation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedChicksNum")
                        .HasColumnType("int");

                    b.Property<decimal>("ConsumedFoodQuantityPerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConsumedWoodDustQuantityPerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeadChicksNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WardID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WardID");

                    b.ToTable("WardInsertionOperations");
                });

            modelBuilder.Entity("ChicksApp.Domain.WardsStock", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ConsumedFoodQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConsumedWoodDust")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrentNumOfChicks")
                        .HasColumnType("int");

                    b.Property<int>("DeadChicks")
                        .HasColumnType("int");

                    b.Property<int>("InitialNumOfChicks")
                        .HasColumnType("int");

                    b.Property<int>("WardID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WardID");

                    b.ToTable("WardsStocks");
                });

            modelBuilder.Entity("ChicksApp.Domain.WardInsertionOperation", b =>
                {
                    b.HasOne("ChicksApp.Domain.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("ChicksApp.Domain.WardsStock", b =>
                {
                    b.HasOne("ChicksApp.Domain.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ward");
                });
#pragma warning restore 612, 618
        }
    }
}
